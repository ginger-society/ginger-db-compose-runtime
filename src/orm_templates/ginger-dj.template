from ginger.db import models


{% for enum in enums %}

{{enum.name | title}} = (
    {% for choice in enum.choices %}{% if not enum.trsnaform_enum %}("{{choice.0}}" , "{{choice.1}}"),{% endif %}
    {% if enum.trsnaform_enum %}("_{{choice.0}}" , "{{choice.1}}"),{% endif %}{% endfor %}
)

{% endfor %}

{% for key, value in schemas.items %}
class {{key | title}}(models.Model):
    {% for fieldname, fieldconfig in  value.fields.items %}{%  if fieldname != 'id' %}{% if fieldconfig.relation_decorator == None or fieldconfig.relation_decorator == 'ManyToOne' %}{{fieldname}} = models.{{fieldconfig.pyType | safe }}({% if fieldconfig.foreign_key_target %}"{{fieldconfig.foreign_key_target | title}}",{% endif %}{% if fieldconfig.default %}default = {% if fieldconfig.pyType == 'CharField' or fieldconfig.pyType == 'TextField' %}"{% endif %}{{fieldconfig.default }}{% if fieldconfig.pyType == 'CharField' or fieldconfig.pyType == 'TextField' %}"{% endif %},{% endif %}{% if fieldconfig.auto_now %}auto_now=True,{% endif %}{% if fieldconfig.auto_now_add %}auto_now_add=True,{% endif %}{% if fieldconfig.on_delete %}on_delete = {{fieldconfig.on_delete}},{% endif %}{% if fieldconfig.choices %}choices={{fieldname | title}}enum,{% endif %}{% if fieldconfig.max_length %}max_length = {{fieldconfig.max_length}},{% endif %}{% if fieldconfig.null %}null= True {% else %}null = False{% endif %}){% endif %}{% endif %}
    {% endfor %}

    class Meta:
        managed = False
        db_table = "{{value.table_name}}"

{% endfor %}
